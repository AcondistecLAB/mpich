--- #YAML:1.0
# This is a YAML formatted file with '#'-style comments.  This file
# *must* be parseable by the YAML::Tiny perl module.  So don't use
# the inline list or map forms and don't try to use any really fancy
# features like tagging or anchors.
#
# It is used to generate parameter-handling code for MPICH.
# See the maint/genparams script for more information.
#
# The only tricky bit is that long reflowed text (such as a description)
# should use ">-" to both fold newlines and remove the trailing newline.
#
# Listing "FOO" as a parameter name will cause two environment variables
# to be examined by default: MPIR_PARAM_FOO and MPICH_FOO, with the
# MPIR_PARAM value having priority.
#
# Each parameter has a class associated with it.  The following
# classes are defined: "device", and "none".  Setting it to "device"
# will allow the device to override the default value.

categories:
    - name        : COLLECTIVE
      description : parameters that control collective communication behavior
    - name        : COMMUNICATOR
      description : parameters that control communicator construction and operation
    - name        : PT2PT
      description : parameters that control point-to-point communication behavior
    - name        : RMA
      description : parameters that control RMA communicatin behavior
    - name        : INTRANODE
      description : intranode communication parameters
    - name        : DEVELOPER
      description : useful for developers working on MPICH itself
    - name        : MEMORY
      description : affects memory allocation and usage, including MPI object handles
    - name        : ERROR_HANDLING
      description : parameters that control error handling behavior (stack traces, aborts, etc)
    - name        : DEBUGGER
      description : parameters relevant to the "MPIR" debugger interface
    - name        : CHECKPOINTING
      description : parameters relevant to checkpointing
    - name        : FAULT_TOLERANCE
      description : parameters that control fault tolerance behavior
    - name        : THREADS
      description : multi-threading parameters
    - name        : CH3
      description : parameters that control behavior of ch3
    - name        : NEMESIS
      description : "parameters that control behavior of the ch3:nemesis channel"
    - name        : SOCKETS
      description : control socket parameters
    - name        : PROCESS_MANAGER
      description : parameters that control the client-side process manager code

parameters:
    ##############################################################
    # collective parameters
    - category    : COLLECTIVE
      name        : ALLTOALL_SHORT_MSG_SIZE
      type        : int
      default     : 256
      class       : device
      description : >-
        the short message algorithm will be used if the per-destination
        message size (sendcount*size(sendtype)) is <= this value

    - category    : COLLECTIVE
      name        : ALLTOALL_MEDIUM_MSG_SIZE
      type        : int
      default     : 32768
      class       : device
      description : >-
        the medium message algorithm will be used if the per-destination
        message size (sendcount*size(sendtype)) is <= this value and
        larger than ALLTOALL_SHORT_MSG_SIZE

    - category    : COLLECTIVE
      name        : ALLTOALL_THROTTLE
      type        : int
      default     : 32
      class       : device
      description : >-
        max no. of irecvs/isends posted at a time in some alltoall
        algorithms. Setting it to 0 causes all irecvs/isends to be
        posted at once.

    - category    : COLLECTIVE
      name        : REDSCAT_COMMUTATIVE_LONG_MSG_SIZE
      type        : int
      default     : 524288
      class       : device
      description : >-
        the long message algorithm will be used if the operation is commutative
        and the send buffer size is >= this value (in bytes)

    - category    : COLLECTIVE
      name        : BCAST_MIN_PROCS
      type        : int
      default     : 8
      class       : device
      description : >-
        the minimum number of processes in a communicator to use a non-binomial
        broadcast algorithm

    - category    : COLLECTIVE
      name        : BCAST_SHORT_MSG_SIZE
      type        : int
      default     : 12288
      class       : device
      description : >-
        the short message algorithm will be used if the send buffer size is <
        this value (in bytes)

    - category    : COLLECTIVE
      name        : BCAST_LONG_MSG_SIZE
      type        : int
      default     : 524288
      class       : device
      description : >-
        the long message algorithm will be used if the send buffer size is >=
        this value (in bytes)

    - category    : COLLECTIVE
      name        : ALLGATHER_SHORT_MSG_SIZE
      type        : int
      default     : 81920
      class       : device
      description : >-
        For MPI_Allgather and MPI_Allgatherv, the short message algorithm will
        be used if the send buffer size is < this value (in bytes).

    - category    : COLLECTIVE
      name        : ALLGATHER_LONG_MSG_SIZE
      type        : int
      default     : 524288
      class       : device
      description : >-
        For MPI_Allgather and MPI_Allgatherv, the long message algorithm will be
        used if the send buffer size is >= this value (in bytes)

    - category    : COLLECTIVE
      name        : REDUCE_SHORT_MSG_SIZE
      type        : int
      default     : 2048
      class       : device
      description : >-
        the short message algorithm will be used if the send buffer size is <=
        this value (in bytes)

    - category    : COLLECTIVE
      name        : ALLREDUCE_SHORT_MSG_SIZE
      type        : int
      default     : 2048
      class       : device
      description : >-
        the short message algorithm will be used if the send buffer size is <=
        this value (in bytes)

    - category    : COLLECTIVE
      name        : GATHER_VSMALL_MSG_SIZE
      type        : int
      default     : 1024
      class       : device
      description : >-
        use a temporary buffer for intracommunicator MPI_Gather if the send
        buffer size is < this value (in bytes)

    - category    : COLLECTIVE
      name        : GATHER_INTER_SHORT_MSG_SIZE
      type        : int
      default     : 2048
      class       : device
      description : >-
        use the short message algorithm for intercommunicator MPI_Gather if the
        send buffer size is < this value (in bytes)

    - category    : COLLECTIVE
      name        : GATHERV_INTER_SSEND_MIN_PROCS
      type        : int
      default     : 32
      class       : device
      description : >-
        Use Ssend (synchronous send) for intercommunicator MPI_Gatherv if the
        "group B" size is >= this value.  Specifying "-1" always avoids using
        Ssend.  For backwards compatibility, specifying "0" uses the default
        value.

    - category    : COLLECTIVE
      name        : SCATTER_INTER_SHORT_MSG_SIZE
      type        : int
      default     : 2048
      class       : device
      description : >-
        use the short message algorithm for intercommunicator MPI_Scatter if the
        send buffer size is < this value (in bytes)

    - category    : COLLECTIVE
      name        : ALLGATHERV_PIPELINE_MSG_SIZE
      type        : int
      default     : 32768
      class       : device
      description : >-
        The smallest message size that will be used for the pipelined, large-message,
        ring algorithm in the MPI_Allgatherv implementation.

    - category    : COLLECTIVE
      name        : ENABLE_SMP_COLLECTIVES
      type        : boolean
      default     : true
      class       : device
      description : >-
        Enable SMP aware collective communication.

    - category    : COLLECTIVE
      name        : ENABLE_SMP_BARRIER
      type        : boolean
      default     : true
      class       : device
      description : >-
        Enable SMP aware barrier.

    - category    : COLLECTIVE
      name        : ENABLE_SMP_BCAST
      type        : boolean
      default     : true
      class       : device
      description : >-
        Enable SMP aware broadcast.

    - category    : COLLECTIVE
      name        : MAX_SMP_BCAST_MSG_SIZE
      type        : int
      default     : 0
      class       : device
      description : >-
        Maximum message size for which SMP-aware broadcast is used.  A
        value of '0' uses SMP-aware broadcast for all message sizes.

    - category    : COLLECTIVE
      name        : ENABLE_SMP_REDUCE
      type        : boolean
      default     : true
      class       : device
      description : >-
        Enable SMP aware reduce.

    - category    : COLLECTIVE
      name        : MAX_SMP_REDUCE_MSG_SIZE
      type        : int
      default     : 0
      class       : device
      description : >-
        Maximum message size for which SMP-aware reduce is used.  A
        value of '0' uses SMP-aware reduce for all message sizes.

    - category    : COLLECTIVE
      name        : ENABLE_SMP_ALLREDUCE
      type        : boolean
      default     : true
      class       : device
      description : >-
        Enable SMP aware allreduce.

    - category    : COLLECTIVE
      name        : MAX_SMP_ALLREDUCE_MSG_SIZE
      type        : int
      default     : 0
      class       : device
      description : >-
        Maximum message size for which SMP-aware allreduce is used.  A
        value of '0' uses SMP-aware allreduce for all message sizes.

    ##############################################################
    # communicator parameters
    - category    : COMMUNICATOR
      name        : COMM_SPLIT_USE_QSORT
      type        : boolean
      default     : true
      class       : device
      description : >-
        Use qsort(3) in the implementation of MPI_Comm_split instead of bubble sort.

  ##############################################################
    # debugging parameters
    - category    : DEBUGGER
      name        : DEBUG_HOLD
      type        : boolean
      default     : false
      class       : device
      description : >-
        If true, causes processes to wait in MPI_Init and
        MPI_Initthread for a debugger to be attached.  Once the
        debugger has attached, the variable 'hold' should be set to 0
        in order to allow the process to continue (e.g., in gdb, "set
        hold=0").

    - category    : DEBUGGER
      name        : PROCTABLE_SIZE
      type        : int
      default     : 64
      class       : device
      description : >-
        Size of the "MPIR" debugger interface proctable (process table).

    - category    : DEBUGGER
      name        : PROCTABLE_PRINT
      type        : boolean
      default     : true
      class       : device
      description : >-
        If true, dump the proctable entries at MPIR_WaitForDebugger-time.
        (currently compile-time disabled by "#if 0")

  ##############################################################
    # fault-tolerance parameters
    - category    : FAULT_TOLERANCE
      name        : ENABLE_COLL_FT_RET
      type        : boolean
      default     : true
      class       : device
      description : >-
        DEPRECATED! Will be removed in MPICH-3.2
        Collectives called on a communicator with a failed process
        should not hang, however the result of the operation may be
        invalid even though the function returns MPI_SUCCESS.  This
        option enables an experimental feature that will return an error
        if the result of the collective is invalid.

  ##############################################################
    # memory parameters
    - category    : MEMORY
      name        : ABORT_ON_LEAKED_HANDLES
      type        : boolean
      default     : false
      class       : device
      description : >-
        If true, MPI will call MPI_Abort at MPI_Finalize if any MPI object
        handles have been leaked.  For example, if MPI_Comm_dup is called
        without calling a corresponding MPI_Comm_free.  For uninteresting
        reasons, enabling this option may prevent all known object leaks from
        being reported.  MPICH must have been configure with
        "--enable-g=handlealloc" or better in order for this functionality to
        work.

  ############################
    # threads parameters
    - category    : THREADS
      name        : CTXID_EAGER_SIZE
      type        : int
      default     : 2
      class       : device
      description : >-
        The MPIR_PARAM_CTXID_EAGER_SIZE environment variable allows you to
        specify how many words in the context ID mask will be set aside
        for the eager allocation protocol.  If the application is running
        out of context IDs, reducing this value may help.

    - category    : THREADS
      name        : ASYNC_PROGRESS
      type        : boolean
      default     : false
      class       : device
      description : >-
        If set to true, MPICH will initiate an additional thread to
        make asynchronous progress on all communication operations
        including point-to-point, collective, one-sided operations and
        I/O.  Setting this variable will automatically increase the
        thread-safety level to MPI_THREAD_MULTIPLE.  While this
        improves the progress semantics, it might cause a small amount
        of performance overhead for regular MPI operations.  The user
        is encouraged to leave one or more hardware threads vacant in
        order to prevent contention between the application threads
        and the progress thread(s).  The impact of oversubscription is
        highly system dependent but may be substantial in some cases,
        hence this recommendation.

    - category    : THREADS
      name        : DEFAULT_THREAD_LEVEL
      type        : string
      default     : "MPI_THREAD_SINGLE"
      class       : device
      description : >-
        Sets the default thread level to use when using MPI_INIT.

    ##############################################################
    # other MPI-level parameters
    - category    : DEVELOPER
      name        : MEMDUMP
      type        : boolean
      default     : true
      class       : device
      description : >-
        If true, list any memory that was allocated by MPICH and that
        remains allocated when MPI_Finalize completes.

    - category    : ERROR_HANDLING
      name        : ERROR_CHECKING
      type        : boolean
      default     : true
      class       : device
      description : >-
        If true, perform checks for errors, typically to verify valid inputs
        to MPI routines.  Only effective when MPICH is configured with
        --enable-error-checking=runtime .

    - category    : ERROR_HANDLING
      name        : PRINT_ERROR_STACK
      type        : boolean
      default     : true
      class       : device
      description : >-
        If true, print an error stack trace at error handling time.

    - category    : ERROR_HANDLING
      name        : CHOP_ERROR_STACK
      type        : int
      default     : 0
      class       : device
      description : >-
        If >0, truncate error stack output lines this many characters
        wide.  If 0, do not truncate, and if <0 use a sensible default.

    ##############################################################
    # ch3 parameters
    - category    : CH3
      name        : CH3_RMA_ACC_IMMED
      type        : boolean
      default     : true
      class       : none
      description : >-
        Use the immediate accumulate optimization

    - category    : CH3
      name        : CH3_RMA_NREQUEST_THRESHOLD
      type        : int
      default     : 4000
      class       : none
      description : >-
        Threshold at which the RMA implementation attempts to complete requests
        while completing RMA operations and while using the lazy synchonization
        approach.  Change this value if programs fail because they run out of
        requests or other internal resources

    - category    : CH3
      name        : CH3_RMA_NREQUEST_NEW_THRESHOLD
      type        : int
      default     : 128
      class       : none
      description : >-
        Threshold for the number of new requests since the last attempt to
        complete pending requests.  Higher values can increase performance,
        but may run the risk of exceeding the available number of requests
        or other internal resources.

    - category    : CH3
      name        : CH3_RMA_LOCK_IMMED
      type        : boolean
      default     : false
      class       : none
      description : >-
        Issue a request for the passive target RMA lock immediately.  Default
        behavior is to defer the lock request until the call to MPI_Win_unlock.

    - category    : CH3
      name        : CH3_RMA_MERGE_LOCK_OP_UNLOCK
      type        : boolean
      default     : true
      class       : none
      description : >-
        Enable/disable an optimization that merges lock, op, and unlock
        messages, for single-operation passive target epochs.

    - category    : CH3
      name        : CH3_NOLOCAL
      alt-env     :
                    - CH3_NO_LOCAL
      type        : boolean
      default     : false
      class       : none
      description : >-
        If true, force all processes to operate as though all processes
        are located on another node.  For example, this disables shared
        memory communication hierarchical collectives.

    - category    : CH3
      name        : CH3_ODD_EVEN_CLIQUES
      alt-env     :
                    - CH3_EVEN_ODD_CLIQUES
      type        : boolean
      default     : false
      class       : none
      description : >-
        If true, odd procs on a node are seen as local to each other, and even
        procs on a node are seen as local to each other.  Used for debugging on
        a single machine.

    - category    : CH3
      name        : CH3_INTERFACE_HOSTNAME
      alt-env     :
                    - INTERFACE_HOSTNAME
      type        : string
      defaultliteral : NULL
      class       : none
      description : >-
        If non-NULL, this parameter specifies the IP address that
        other processes should use when connecting to this process.
        This parameter is mutually exclusive with the
        MPIR_PARAM_CH3_NETWORK_IFACE parameter and it is an error to set them
        both.

    - category    : CH3
      name        : CH3_EAGER_MAX_MSG_SIZE
      type        : int
      default     : 131072
      class       : none
      description : >-
        This parameter controls the message size at which CH3 switches
        from eager to rendezvous mode.

    - category    : CH3
      name        : CH3_PORT_RANGE
      alt-env     :
                    - PORTRANGE
                    - PORT_RANGE
      type        : range
      default     : "0:0"
      class       : none
      description : >-
        The MPIR_PARAM_CH3_PORT_RANGE environment variable allows you to
        specify the range of TCP ports to be used by the process
        manager and the MPICH library. The format of this variable is
        <low>:<high>.  To specify any available port, use 0:0.

    ##############################################################
    # nemesis parameters
    - category    : NEMESIS
      name        : NEMESIS_POLLS_BEFORE_YIELD
      type        : int
      default     : 1000
      class       : none
      description : >-
        When MPICH is in a busy waiting loop, it will periodically
        call a function to yield the processor.  This parameter sets
        the number of loops before the yield function is called.  A
        value of 0 disables yielding.

    - category    : NEMESIS
      name        : NEMESIS_LMT_DMA_THRESHOLD
      type        : int
      default     : 2097152
      class       : none
      description : >-
        Messages larger than this size will use the "dma" (knem)
        intranode LMT implementation, if it is enabled and available.

    - category    : NEMESIS
      name        : NEMESIS_NETMOD
      type        : string
      default     : ""
      class       : none
      description : >-
        If non-empty, this parameter specifies which network module
        should be used for communication.

    - category    : NEMESIS
      name        : NEMESIS_SHM_EAGER_MAX_SZ
      type        : int
      default     : -1
      class       : none
      description : >-
        This parameter controls the message size at which Nemesis
        switches from eager to rendezvous mode for shared memory.
        If this parameter is set to -1, then Nemesis will choose
        an appropriate value.

    - category    : NEMESIS
      name        : NEMESIS_SHM_READY_EAGER_MAX_SZ
      type        : int
      default     : -2
      class       : none
      description : >-
        This parameter controls the message size at which Nemesis
        switches from eager to rendezvous mode for ready-send
        messages.  If this parameter is set to -1, then ready messages
        will always be sent eagerly.  If this parameter is set to -2,
        then Nemesis will choose an appropriate value.

    - category    : NEMESIS
      name        : NEMESIS_ENABLE_CKPOINT
      type        : boolean
      default     : false
      class       : none
      description : >-
        If true, enables checkpointing support and returns an error if
        checkpointing library cannot be initialized.

    ##############################################################
    # nemesis TCP parameters
    - category    : NEMESIS
      name        : NEMESIS_TCP_NETWORK_IFACE
      alt-env     :
                    - NETWORK_IFACE
      type        : string
      defaultliteral : NULL
      class       : none
      description : >-
        If non-NULL, this parameter specifies which pseudo-ethernet
        interface the tcp netmod should use (e.g., "eth1", "ib0").
        Note, this is a Linux-specific parameter.
        This parameter is mutually exclusive with the
        MPIR_PARAM_CH3_INTERFACE_HOSTNAME parameter and it is an error to set
        them both.

    - category    : NEMESIS
      name        : NEMESIS_TCP_HOST_LOOKUP_RETRIES
      type        : int
      default     : 10
      class       : none
      description : >-
        This parameter controls the number of times to retry the
        gethostbyname() function before giving up.

    ##############################################################
    # nemesis portals parameters
    - category    : NEMESIS
      name        : NEMESIS_PORTALS_COMM_OVERRIDES
      type        : boolean
      default     : true
      class       : none
      description : >-
        If set to false, communication override functionality will be
        disabled for netmods that provide the override feature.
        # Note the netmod must implement this functionality by not
        # setting the comm_ops table in any VC.

    ##############################################################
    # process manager parameters
    - category    : PROCESS_MANAGER
      name        : NAMESERV_FILE_PUBDIR
      alt-env     :
                    - NAMEPUB_DIR
      type        : string
      defaultliteral : NULL
      class       : none
      description : >-
        Sets the directory to use for MPI service publishing in the
        file nameserv implementation.  Allows the user to override
        where the publish and lookup information is placed for
        connect/accept based applications.

...

# Local Variables:
# mode: conf-colon
# indent-tabs-mode: nil
# End:
